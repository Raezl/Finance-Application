//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Finance_Application
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Xml;


    public partial class PayerPayee
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public PayerPayee()
        {
            this.Transactions = new HashSet<Transaction>();
        }
    
        public int PPId { get; set; }
        public string Name { get; set; }
        public string Address { get; set; }
        public string DOB { get; set; }
        public string Email { get; set; }
        public int UserDetailsUserId { get; set; }
    
        public virtual UserDetails UserDetail { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Transaction> Transactions { get; set; }
        public bool AddPayerPayee(PayerPayee obj)
        {
            using (var context = new FinanceEDMContainer())
            {
                //obj.UserDetailsUserId = Session.SessionID;
                obj.UserDetailsUserId = 1;
                context.PayerPayees.Add(obj);
                context.SaveChanges();
            }
            return true;
        }

        public bool RemovePayerPayee(int id)
        {
            using (var context = new FinanceEDMContainer())
            {
                var record = context.PayerPayees.Where(e => e.PPId == id).Single();
                context.PayerPayees.Remove(record);
                context.SaveChanges();
            }
            return true;
        }

        public bool UpdatePayerPayee(PayerPayee obj)
        {
            using (var context = new FinanceEDMContainer())
            {
                var record = context.PayerPayees.SingleOrDefault(e => e.PPId == obj.PPId);
                record.Name = obj.Name;
                record.Address = obj.Address;
                record.DOB = obj.DOB;
                record.Email = obj.Email;
                record.UserDetailsUserId = 1;
                context.SaveChanges();
            }
            return true;
        }

        public List<PayerPayee> AllPPRecords()
        {
            using (var context = new FinanceEDMContainer())
            {
                return context.PayerPayees.ToList();
            }
        }

        public PayerPayee PPRecord(int id)
        {
            using (var context = new FinanceEDMContainer())
            {
                return context.PayerPayees.SingleOrDefault(e => e.PPId == id);
            }
        }

        public List<String> ReadPayerPayeeXML()
        {
            XmlDocument xml = new XmlDocument();
            xml.Load("C:\\Users\\yasirulakruwan\\source\\repos\\Finance Application\\Finance Application\\bin\\Debug\\PayerPayee.xml");
            XmlNodeList root = xml.GetElementsByTagName("PayersPayees");
            List<String> records = new List<String>();
            for (int i = 0; i < root.Count; i++)
            {
                for (int e = 0; e < 6; e++)
                    records.Add(root[i].Attributes[e].Value);
            }
            return records;
        }

        public void WritePayerPayeeXML()
        {
            using (var context = new FinanceEDMContainer())
            {
                List<PayerPayee> records = AllPPRecords();

                String[] columnname = { "PPId", "Name", "Address", "DOB", "Email", "UserDetailsUserId" };


                XmlWriterSettings settings = new XmlWriterSettings();
                settings.Indent = true;
                XmlWriter writer = XmlWriter.Create("PayerPayee.xml", settings);
                writer.WriteStartDocument();
                writer.WriteStartElement("PayerPayee");

                for (int i = 0; i < records.Count; i++)
                {
                    writer.WriteStartElement("PayersPayees");
                    writer.WriteAttributeString(columnname[0], records[i].GetType().GetProperty(columnname[0]).GetValue(records[i]).ToString());

                    for (int e = 1; e < columnname.Length; e++)
                    {
                        writer.WriteAttributeString(columnname[e], records[i].GetType().GetProperty(columnname[e]).GetValue(records[i]).ToString());
                    }
                    writer.WriteEndElement();
                }

                writer.WriteEndDocument();
                writer.Close();
            }
        }
    }
}
